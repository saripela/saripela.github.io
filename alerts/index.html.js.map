{"version":3,"file":"alerts\\index.html.js","mappings":"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","sources":["webpack://de-migration/./node_modules/banner-alert-js/banner-alert.js","webpack://de-migration/./src/demos/alerts/index.js"],"sourcesContent":["export let BannerAlert = (() => {\n\t\n\tlet store = {};\n\t\n    let Constructor = function( options ) {\n\t\n\t\tlet state = {\n\t\t\tactive : true\n\t\t}\n\t\t\n        let publicMethods = {};\n        let privateMethods = {};\n        \n        let settings; \n        \n        privateMethods.getNodeTemplate = function() {\n\t        \n\t        let nodeColumn   = document.createElement( 'div' );\n\t        let nodeTemplate = document.createElement( 'div' );\n\t        let messageNode  = document.createElement( 'div' );\n\t        let buttonNode   = document.createElement( 'button' ); \n\t        \n\t        nodeColumn.classList.add( ...settings.classList );\n\t\t\tnodeColumn.setAttribute( 'data-ref', settings.id );\n\t\t\tnodeTemplate.setAttribute( 'data-alert-message', settings.id );\n\t\t\tnodeTemplate.setAttribute( 'data-message-type', settings.messageType ); \n\t\t\tnodeTemplate.setAttribute( 'data-status', 'active' ); \n\t\t\tmessageNode.classList.add( 'message' ); \n\t\t\t\n\t\t\tmessageNode.innerHTML = settings.message;\n\t\t\n\t\t\tbuttonNode.classList.add( ...settings.buttonClassList, 'close-button' );\n\t\t\tbuttonNode.innerHTML = settings.buttonText;\n\n\t\t\tprivateMethods.closeAlertEventListener( buttonNode );\n\t\t\t\n\t\t\tnodeTemplate.appendChild( messageNode ); \n\t\t\tnodeTemplate.appendChild( buttonNode );\n\t\t\t\n\t\t\tnodeColumn.appendChild( nodeTemplate );\n\t\t\t\n\t        return nodeColumn;\n\t        \n        }\n        \n        privateMethods.show = function( target ) {\n\t        \n            target.setAttribute( 'data-status', 'active' ); \n            publicMethods.updateState( { 'active' : true } );\n\n        }\n\n        privateMethods.hide = function( target ) {\n\n\t        if( target.getAttribute( 'data-alert-message' ) !== null ) {\n\t\t\t\ttarget.parentElement.remove();\n\t\t\t}\n\n            target.setAttribute( 'data-status', 'inactive' );\n            publicMethods.updateState( { 'active' : false } );\n\n        }\n        \n        publicMethods.updateState = function( newState ) {\n            \n            for( let setting in newState ) {\n                state[ setting ] = newState[ setting ];\n            }\n\n        }\n\n        publicMethods.getState = function( fieldName = '' ) {\n\t        \n\t        if( fieldName == '' ) {\n\t\t        return state;\n\t        } else { \n\t\t        return state[ fieldName ];\n\t        }\n\t        \n        }\n        \n        publicMethods.hideAlert = function() {\n\n            privateMethods.hide( settings.target );    \n\n        }\n\t\t\n\t\tpublicMethods.render = function() {\n\t\t\t\n\t\t\tlet bannerAlertContainer = privateMethods.getNodeTemplate( settings );\n\t\t\tsettings.target = bannerAlertContainer.querySelector( '[data-alert-message]' );\n\t\t\t\n\t\t\tif( !settings.parentContainer ) {\n\t\t\t\talert( settings.message );\n\t\t\t} else {\n\t\t\t\tsettings.parentContainer.prepend( bannerAlertContainer );\n\n\t\t\t\tsetTimeout( function() { \n\t\t\t\t\tpublicMethods.hideAlert();\n\t\t\t\t}, settings.messageTtl );\n\t\t\t}\n\t\t\t\t\n\t\t}\n\t\t\n\t\tpublicMethods.init = function( options ) {\n\t\t\tsettings = options;\n\t\t}\n\t\t\n\t    privateMethods.closeAlertEventListener = function( targetButton ) {\n\t\t    \n\t\t    window.addEventListener( 'click', function( e ){\n\t\t\t    \n\t\t\t\tif( e.target == targetButton ) {\n\t\t\t\t\tpublicMethods.hideAlert();\n\t\t\t\t}\n\t\t\t\t   \n\t\t    });\n\t\t    \n\t    }\n\n\t\tpublicMethods.init( options );\n\t\treturn publicMethods;\t\n\n    }\n    \n    const getAllAlerts = function( name, obj ) {\n        return store; \n    }\n\n\tconst storeBannerAlert = function( name, obj ) {\n\t\tstore[ name ] = obj;\n\t}\n\n\tconst registerBannerAlert = function( \n\t\tmessageType = 'message', \n\t\tmessage = 'Message not provide', \n\t\tparentContainer = false, \n\t\tmessageTtl = 20000, \n\t\tclassList = [],\n\t\tbuttonClassList = [], \n\t\tbuttonText = '&times;'\n\t) {\n\n\t\tlet moduleName = 'systemAlert';\n\t\tlet moduleId   = ensureUniqueKey( returnRandomKey( moduleName ), Object.keys( store ), moduleName ); \n\n\t\tstoreBannerAlert(\n\t\t\tmoduleId, \n\t\t\tnew BannerAlert.init({\n\t\t\t\tid              : moduleId,\n\t\t\t\tmessage         : message,\n\t\t\t\tmessageTtl      : messageTtl,\n\t\t\t\tmessageType     : messageType, \n\t\t\t\tparentContainer : parentContainer, \n\t\t\t\tclassList       : classList, \n\t\t\t\tbuttonClassList : buttonClassList, \n\t\t\t\tbuttonText      : buttonText, \n\t\t\t})\n\t\t);\n\t\n\t\tstore[ moduleId ].render();\n\t\t\n\t}\n\n    const ensureUniqueKey = function( newKey, existingKeys, moduleName ) {\n    \n        for( let i = 0; i < existingKeys.length; i++ ) {\n            if( newKey === existingKeys[ i ] ) { \n                ensureUniqueKey( newKey, existingKeys, moduleName );\n            }\n        }\n\n        return newKey;\n        \n    }\n\n    const returnRandomKey = function( moduleName ) {\n        return 'module_' + moduleName + '_' + Math.floor( Math.random() * Math.floor( 100000 ) );\n    }\n\t\n    return {\n\t\tinit   : Constructor,\n        getAllAlerts : getAllAlerts,\n        transmit : registerBannerAlert\n    }\n\n})();","import { BannerAlert } from 'banner-alert-js/banner-alert.js';\r\n \r\nconst Alerts = {\r\n    fullWidthAlerts: [\r\n        {\r\n            type: 'message',\r\n            headline: 'This is an alert headline',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl',\r\n            customClassList: ['alert-container','bg--info-background'],\r\n            buttonClassList: ['btn--tertiary']\r\n        },\r\n        {\r\n            type: 'error',\r\n            headline: 'This is error alert headline',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl',\r\n            customClassList: ['alert-container','bg--error-background'],\r\n            buttonClassList: ['btn--tertiary']\r\n        },\r\n        {\r\n            type: 'warning',\r\n            headline: 'This is warning alert headline',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl',\r\n            customClassList: ['alert-container','bg--warning-background'],\r\n            buttonClassList: ['btn--tertiary']\r\n        },\r\n        {\r\n            type: 'success',\r\n            headline: 'This is success alert headline',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl',\r\n            customClassList: ['alert-container','bg--success-background'],\r\n            buttonClassList: ['btn--tertiary']\r\n        }\r\n    ], \r\n    basicAlerts: [\r\n        {\r\n            type: 'message',\r\n            headline: 'This is an alert headline',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl',\r\n            customClassList: ['alert-container', 'bg--info-background'],\r\n            buttonClassList: ['btn--tertiary']\r\n        },\r\n        {\r\n            type: 'error',\r\n            headline: 'This is error alert headline',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl',\r\n            customClassList: ['alert-container', 'bg--error-background'],\r\n            buttonClassList: ['btn--tertiary']\r\n        },\r\n        {\r\n            type: 'warning',\r\n            headline: 'This is warning alert headline',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl',\r\n            customClassList: ['alert-container', 'bg--warning-background'],\r\n            buttonClassList: ['btn--tertiary']\r\n        },\r\n        {\r\n            type: 'success',\r\n            headline: 'This is success alert headline',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl',\r\n            customClassList: ['alert-container', 'bg--success-background'],\r\n            buttonClassList: ['btn--tertiary']\r\n        }\r\n    ],\r\n    alertsWithButtons: [\r\n        {\r\n            type: 'message',\r\n            headline: 'This is an alert headline',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl',\r\n            customClassList: ['alert-container', 'bg--info-background'],\r\n            buttonClassList: ['btn--tertiary']\r\n        },\r\n        {\r\n            type: 'error',\r\n            headline: 'This is error alert headline',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl',\r\n            customClassList: ['alert-container', 'bg--error-background'],\r\n            buttonClassList: ['btn--tertiary']\r\n        },\r\n        {\r\n            type: 'warning',\r\n            headline: 'This is warning alert headline',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl',\r\n            customClassList: ['alert-container', 'bg--warning-background'],\r\n            buttonClassList: ['btn--tertiary']\r\n        },\r\n        {\r\n            type: 'success',\r\n            headline: 'This is success alert headline',\r\n            message: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl',\r\n            customClassList: ['alert-container', 'bg--success-background'],\r\n            buttonClassList: ['btn--tertiary']\r\n        }\r\n    ]\r\n}\r\n\r\nwindow.triggerAlertsFullWidth = () => {\r\n    const parentContainer = document.querySelector('.full-width-dismissable-banner-alerts');\r\n    const messageTtl = 100000;\r\n    const alerts = Alerts.fullWidthAlerts; \r\n\r\n    alerts.forEach(alert => {\r\n        const message = `<div class=\"row\"> \r\n                            <div class=\"alert-msg col--lg-12\">\r\n                              <h4 class=\"alert-head\">${alert.headline}</h4> \r\n                              <span class=\"p-2\">${alert.message}</span>\r\n                            </div>\r\n                       </div>`;\r\n\r\n        BannerAlert.transmit(alert.type, message, parentContainer, messageTtl, alert.customClassList, alert.buttonClassList);\r\n    });\r\n}\r\n\r\nwindow.triggerAlerts = () => {\r\n    const parentContainer = document.querySelector('.banner-alerts');\r\n    const messageTtl = 100000;\r\n    const alerts = Alerts.basicAlerts; \r\n\r\n    alerts.forEach(alert => {\r\n        const message = `<div class=\"row\"> \r\n                            <div class=\"alert-msg col--lg-12\">\r\n                              <h4 class=\"alert-head\">${alert.headline}</h4> \r\n                              <span class=\"p-2\">${alert.message}</span>\r\n                            </div>\r\n                       </div>`;\r\n\r\n        BannerAlert.transmit(alert.type, message, parentContainer, messageTtl, alert.customClassList, alert.buttonClassList);\r\n    });\r\n}\r\n \r\nwindow.triggerAlertsWithButton = () => {\r\n    const parentContainer = document.querySelector('.cta-banner-alerts');\r\n    const messageTtl = 100000;\r\n    const alerts = Alerts.alertsWithButtons; \r\n\r\n    alerts.forEach(alert => {\r\n        const message = `<div class=\"row\"> \r\n                            <div class=\"alert-msg col--lg-9\">\r\n                              <h4 class=\"alert-head\">${alert.headline}</h4> \r\n                              <span class=\"p-2\">${alert.message}</span>\r\n                            </div>\r\n                            <div class=\"alert-cta col--lg-3\">\r\n                                <button class=\"btn\" href=\"#\">sample Text</button>\r\n                            </div>\r\n                       </div>`;\r\n\r\n        BannerAlert.transmit(alert.type, message, parentContainer, messageTtl, alert.customClassList, alert.buttonClassList);\r\n    });\r\n}"],"names":["BannerAlert","store","ensureUniqueKey","newKey","existingKeys","moduleName","i","length","init","options","settings","state","active","publicMethods","privateMethods","nodeColumn","document","createElement","nodeTemplate","messageNode","buttonNode","classList","add","setAttribute","id","messageType","innerHTML","message","buttonClassList","buttonText","closeAlertEventListener","appendChild","target","updateState","getAttribute","parentElement","remove","newState","setting","getState","fieldName","hideAlert","hide","render","bannerAlertContainer","getNodeTemplate","querySelector","parentContainer","prepend","setTimeout","messageTtl","alert","targetButton","window","addEventListener","e","getAllAlerts","name","obj","transmit","moduleId","Math","floor","random","returnRandomKey","Object","keys","Alerts","type","headline","customClassList","triggerAlertsFullWidth","forEach","triggerAlerts","triggerAlertsWithButton"],"sourceRoot":""}