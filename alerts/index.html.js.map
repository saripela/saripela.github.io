{"version":3,"file":"alerts\\index.html.js","mappings":"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","sources":["webpack://de-migration/./node_modules/banner-alert-js/banner-alert.js","webpack://de-migration/./src/demos/alerts/index.js"],"sourcesContent":["export let BannerAlert = (() => {\n\t\n\tlet store = {};\n\t\n    let Constructor = function( options ) {\n\t\n\t\tlet state = {\n\t\t\tactive : true\n\t\t}\n\t\t\n        let publicMethods = {};\n        let privateMethods = {};\n        \n        let settings; \n        \n        privateMethods.getNodeTemplate = function() {\n\t        \n\t        let nodeColumn   = document.createElement( 'div' );\n\t        let nodeTemplate = document.createElement( 'div' );\n\t        let messageNode  = document.createElement( 'div' );\n\t        let buttonNode   = document.createElement( 'button' );\n\t        \n\t        nodeColumn.classList.add( ...settings.classList );\n\t\t\tnodeColumn.setAttribute( 'data-ref', settings.id );\n\t\t\tnodeTemplate.setAttribute( 'data-alert-message', settings.id );\n\t\t\tnodeTemplate.setAttribute( 'data-message-type', settings.messageType ); \n\t\t\tnodeTemplate.setAttribute( 'data-status', 'active' ); \n\t\t\tmessageNode.classList.add( 'message' );\n\t\t\t\n\t\t\tmessageNode.innerHTML = settings.message;\n\t\t\t\n\t\t\tbuttonNode.className = 'close-button';\n\t\t\tbuttonNode.innerHTML = '&times;';\n\t\t\t\n\t\t\tprivateMethods.closeAlertEventListener( buttonNode );\n\t\t\t\n\t\t\tnodeTemplate.appendChild( messageNode ); \n\t\t\tnodeTemplate.appendChild( buttonNode );\n\t\t\t\n\t\t\tnodeColumn.appendChild( nodeTemplate );\n\t\t\t\n\t        return nodeColumn;\n\t        \n        }\n        \n        privateMethods.show = function( target ) {\n\t        \n            target.setAttribute( 'data-status', 'active' ); \n            publicMethods.updateState( { 'active' : true } );\n\n        }\n\n        privateMethods.hide = function( target ) {\n\n\t        if( target.getAttribute( 'data-alert-message' ) !== null ) {\n\t\t\t\ttarget.parentElement.remove();\n\t\t\t}\n\n            target.setAttribute( 'data-status', 'inactive' );\n            publicMethods.updateState( { 'active' : false } );\n\n        }\n        \n        publicMethods.updateState = function( newState ) {\n            \n            for( let setting in newState ) {\n                state[ setting ] = newState[ setting ];\n            }\n\n        }\n\n        publicMethods.getState = function( fieldName = '' ) {\n\t        \n\t        if( fieldName == '' ) {\n\t\t        return state;\n\t        } else { \n\t\t        return state[ fieldName ];\n\t        }\n\t        \n        }\n        \n        publicMethods.hideAlert = function() {\n\n            privateMethods.hide( settings.target );    \n\n        }\n\t\t\n\t\tpublicMethods.render = function() {\n\t\t\t\n\t\t\tlet bannerAlertContainer = privateMethods.getNodeTemplate( settings );\n\t\t\tsettings.target = bannerAlertContainer.querySelector( '[data-alert-message]' );\n\t\t\t\n\t\t\tif( !settings.parentContainer ) {\n\t\t\t\talert( settings.message );\n\t\t\t} else {\n\t\t\t\tsettings.parentContainer.prepend( bannerAlertContainer );\n\n\t\t\t\tsetTimeout( function() { \n\t\t\t\t\tpublicMethods.hideAlert();\n\t\t\t\t}, settings.messageTtl );\n\t\t\t}\n\t\t\t\t\n\t\t}\n\t\t\n\t\tpublicMethods.init = function( options ) {\n\t\t\tsettings = options;\n\t\t}\n\t\t\n\t    privateMethods.closeAlertEventListener = function( targetButton ) {\n\t\t    \n\t\t    window.addEventListener( 'click', function( e ){\n\t\t\t    \n\t\t\t\tif( e.target == targetButton ) {\n\t\t\t\t\tpublicMethods.hideAlert();\n\t\t\t\t}\n\t\t\t\t   \n\t\t    });\n\t\t    \n\t    }\n\n\t\tpublicMethods.init( options );\n\t\treturn publicMethods;\t\n\n    }\n    \n    const getAllAlerts = function( name, obj ) {\n        return store; \n    }\n\n\tconst storeBannerAlert = function( name, obj ) {\n\t\tstore[ name ] = obj;\n\t}\n\n\tconst registerBannerAlert = function( messageType = 'message', message = 'Message not provide', parentContainer = false, messageTtl = 20000, classList = [] ) {\n\n\t\tlet moduleName = 'systemAlert';\n\t\tlet moduleId   = ensureUniqueKey( returnRandomKey( moduleName ), Object.keys( store ), moduleName ); \n\n\t\tstoreBannerAlert(\n\t\t\tmoduleId, \n\t\t\tnew BannerAlert.init({\n\t\t\t\tid          : moduleId,\n\t\t\t\tmessage     : message,\n\t\t\t\tmessageTtl  : messageTtl,\n\t\t\t\tmessageType : messageType, \n\t\t\t\tparentContainer : parentContainer, \n\t\t\t\tclassList : classList\t\n\t\t\t})\n\t\t);\n\t\n\t\tstore[ moduleId ].render();\n\t\t\n\t}\n\n    const ensureUniqueKey = function( newKey, existingKeys, moduleName ) {\n    \n        for( let i = 0; i < existingKeys.length; i++ ) {\n            if( newKey === existingKeys[ i ] ) { \n                ensureUniqueKey( newKey, existingKeys, moduleName );\n            }\n        }\n\n        return newKey;\n        \n    }\n\n    const returnRandomKey = function( moduleName ) {\n        return 'module_' + moduleName + '_' + Math.floor( Math.random() * Math.floor( 100000 ) );\n    }\n\t\n    return {\n\t\tinit   : Constructor,\n        getAllAlerts : getAllAlerts,\n        transmit : registerBannerAlert\n    }\n\n})();","import { BannerAlert } from 'banner-alert-js/banner-alert.js';\r\nwindow.triggerAlerts = function() {\r\n    let messageType = 'message'; // Can be any value\r\n    let message     = `<div class=\"row\"> \r\n                            <div class=\"alert-msg col--lg-12\">\r\n                              <h4 class=\"alert-head\">This is an alert headline</h4> \r\n                              <span class=\"p-2\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl </span>\r\n                            </div>\r\n                       </div>`;\r\n    let messageTtl  = 100000; // Measured in seconds\r\n    let parentContainer = document.querySelector( '.banner-alerts' ); // This container can be anywhere in the document\r\n    let customClassList = [ 'bg--primary-light-3' ];\r\n\r\n\r\n    BannerAlert.transmit( \r\n        messageType, \r\n        message, \r\n        parentContainer, \r\n        messageTtl, \r\n        customClassList\r\n    );\t\r\n\r\n    messageType = 'error'; // Can be any value\r\n    message     = `<div class=\"row\"> \r\n                        <div class=\"alert-msg col--lg-12\">\r\n                            <h4 class=\"alert-head\">This is error alert headline</h4> \r\n                            <span class=\"p-2\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl </span>\r\n                        </div>\r\n                    </div>`;\r\n    customClassList = [ 'bg--error-background' ];\r\n\r\n    BannerAlert.transmit( \r\n        messageType, \r\n        message, \r\n        parentContainer, \r\n        messageTtl, \r\n        customClassList\r\n    );\t\r\n\r\n    messageType = 'warning'; // Can be any value\r\n    message     = `<div class=\"row\"> \r\n                        <div class=\"alert-msg col--lg-12\">\r\n                            <h4 class=\"alert-head\">This is warning alert headline</h4> \r\n                            <span class=\"p-2\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl </span>\r\n                        </div>\r\n                    </div>`;\r\n    customClassList = [ 'bg--warning-background' ];\r\n\r\n    BannerAlert.transmit( \r\n        messageType, \r\n        message, \r\n        parentContainer, \r\n        messageTtl, \r\n        customClassList\r\n    );\t\r\n\r\n    messageType = 'success'; // Can be any value\r\n    message     = `<div class=\"row\"> \r\n                        <div class=\"alert-msg col--lg-12\">\r\n                            <h4 class=\"alert-head\">This is success alert headline</h4> \r\n                            <span class=\"p-2\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl </span>\r\n                        </div>\r\n                    </div>`;\r\n    customClassList = [ 'bg--success-background' ];\r\n\r\n    BannerAlert.transmit( \r\n        messageType, \r\n        message, \r\n        parentContainer, \r\n        messageTtl, \r\n        customClassList\r\n    );\t\r\n}\r\n\r\nwindow.triggerAlertsWithButton = function() {\r\n    let messageType = 'message'; // Can be any value\r\n    let message     = `<div class=\"row\"> \r\n                            <div class=\"alert-msg col--lg-9\">\r\n                              <h4 class=\"alert-head\">This is an alert headline</h4> \r\n                              <span class=\"p-2\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl </span>\r\n                            </div>\r\n                            <div class=\"alert-cta col--lg-3\">\r\n                                <button class=\"btn\" href=\"#\">sample Text</button>\r\n                            </div>\r\n                       </div>`;\r\n    let messageTtl  = 100000; // Measured in seconds\r\n    let parentContainer = document.querySelector( '.cta-banner-alerts' ); // This container can be anywhere in the document\r\n    let customClassList = [ 'bg--primary-light-3' ];\r\n\r\n\r\n    BannerAlert.transmit( \r\n        messageType, \r\n        message, \r\n        parentContainer, \r\n        messageTtl, \r\n        customClassList\r\n    );\t\r\n\r\n    messageType = 'error'; // Can be any value\r\n    message     = `<div class=\"row\"> \r\n                            <div class=\"alert-msg col--lg-9\">\r\n                              <h4 class=\"alert-head\">This is error alert headline</h4> \r\n                              <span class=\"p-2\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl </span></div>\r\n                            <div class=\"alert-cta col--lg-3\">\r\n                                <button class=\"btn\" href=\"#\">sample Text</button>\r\n                            </div>\r\n                       </div>`;\r\n    customClassList = [ 'bg--error-background' ];\r\n\r\n\r\n    BannerAlert.transmit( \r\n        messageType, \r\n        message, \r\n        parentContainer, \r\n        messageTtl, \r\n        customClassList\r\n    );\t\r\n\r\n    messageType = 'warning'; // Can be any value\r\n    message     = `<div class=\"row\"> \r\n                            <div class=\"alert-msg col--lg-9\">\r\n                              <h4 class=\"alert-head\">This is warning alert headline</h4> \r\n                              <span class=\"p-2\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl </span></div>\r\n                            <div class=\"alert-cta col--lg-3\">\r\n                                <button class=\"btn\" href=\"#\">sample Text</button>\r\n                            </div>\r\n                       </div>`;\r\n    customClassList = [ 'bg--warning-background' ];\r\n\r\n\r\n    BannerAlert.transmit( \r\n        messageType, \r\n        message, \r\n        parentContainer, \r\n        messageTtl, \r\n        customClassList\r\n    );\t\r\n\r\n    messageType = 'message'; // Can be any value\r\n    message     = `<div class=\"row\"> \r\n                            <div class=\"alert-msg col--lg-9\">\r\n                              <h4 class=\"alert-head\">This is success alert headline</h4> \r\n                              <span class=\"p-2\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam at porttitor sem. Aliquam erat volutpat. Donec placerat nisl </span></div>\r\n                            <div class=\"alert-cta col--lg-3\">\r\n                                <button class=\"btn\" href=\"#\">sample Text</button>\r\n                            </div>\r\n                       </div>`;\r\n    customClassList = [ 'bg--success-background' ];\r\n\r\n    BannerAlert.transmit( \r\n        messageType, \r\n        message, \r\n        parentContainer, \r\n        messageTtl, \r\n        customClassList\r\n    );\t\r\n}\r\n      \r\n "],"names":["BannerAlert","store","ensureUniqueKey","newKey","existingKeys","moduleName","i","length","init","options","settings","state","active","publicMethods","privateMethods","nodeColumn","document","createElement","nodeTemplate","messageNode","buttonNode","classList","add","setAttribute","id","messageType","innerHTML","message","className","closeAlertEventListener","appendChild","target","updateState","getAttribute","parentElement","remove","newState","setting","getState","fieldName","hideAlert","hide","render","bannerAlertContainer","getNodeTemplate","querySelector","parentContainer","prepend","setTimeout","messageTtl","alert","targetButton","window","addEventListener","e","getAllAlerts","name","obj","transmit","moduleId","Math","floor","random","returnRandomKey","Object","keys","triggerAlerts","customClassList","triggerAlertsWithButton"],"sourceRoot":""}