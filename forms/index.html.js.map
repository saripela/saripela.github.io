{"version":3,"file":"forms\\index.html.js","mappings":"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","sources":["webpack://de-migration/./node_modules/html5-form-validation-js/html5-form-validation.js","webpack://de-migration/./src/assets/demo-scripts/backgroundToggle.js","webpack://de-migration/./src/demos/forms/index.js"],"sourcesContent":["export let FormValidation = ( function( window, document ) {\n\n    let callbacks = [];\n    let validationMsgClass = 'validation-message';\n    let inputErrorClass = 'input-error';\n\n    function init( formElement ) {\n\n        let formId = formElement.id;\n        let validFormCallback = formElement.getAttribute( 'data-form-callback' );\n\n        if( formId === undefined ) {\n            console.warn( 'HTML5 Validation Plugin, Form ID missing.' );\n            return; // exit plugin\n        }\n\n        formElement.noValidate = true; \n        formElement.addEventListener( 'submit', function( submitEvent ) {\n            submitEvent.preventDefault();\n            submitEvent.stopImmediatePropagation();\n            submitEvent.stopPropagation();\n            validateForm( submitEvent, validFormCallback );\n        });\n\n    }\n\n    /**\n     * Check for form submissions by bots\n     * @param {Node} honeypot The function to call after form is validated \n     */\n\n    let checkHoneypot = function( form ) {\n        \n        var honeypot = form.querySelector( '.jar input[type=\"text\"]' );\n        if( honeypot === null ) {\n            return; // Skip this\n        } else {\n            return ( honeypot.value !== '' ) ? true : false;\n        }\n\n    } \n\n    /** \n     * Validate form \n     * \n     * @param {Object} submitEvent  Event listener triggered on click of submit button\n     * @param {String} callbackName Name of index where callback function was stored within this.forms\n     */\n\n    function validateForm( submitEvent, callbackName ) {\n\n        // Prevent form submissions by bots \n        if ( checkHoneypot( submitEvent.target ) ) { return false };\n\n        if( callbackName === null ) {\n            console.warn( 'HTML5 Form Validation, name of callback not supplied.' );\n            return; // exit plugin\n        }\n\n        // Check field validity\n        if ( !submitEvent.target.checkValidity() ) {\n\n            removeMessage( submitEvent.target );\n            postMessage( submitEvent.target );\n\n        } else {\n            \n            removeMessage( submitEvent.target );\n            callbacks[ callbackName ]( submitEvent );\n            return true; /* everything's cool, the form is valid! */\n\n        }\n\n    }\n\n    /**\n     * Add validation messages to form inputs \n     * \n     * @param {HTMLelement} form \n     */\n\n    function postMessage( form ) {\n\n        let elements = form.elements;\n        let errorOutputId = form.getAttribute( 'data-error-output-id' ); \n        let aroundInput = form.getAttribute( 'data-near-input' );\n        let errorMsgContainer = document.getElementById( errorOutputId );\n\n        /* Loop through the elements, looking for an invalid one. */\n        for ( let index = 0, len = elements.length; index < len; index++ ) {\n\n            let element = elements[ index ];\n            let message = element.validationMessage;\n            let parent  = element.parentNode; \n\n            if( element.dataset.errorMessage !== undefined ) { \n                message = element.dataset.errorMessage; \n            } \n\n            if( errorOutputId !== null ) {\n                message = formatElementName( element.name ) + \" - \" + message;\n            }\n               \n            if ( element.willValidate === true && element.validity.valid !== true ) {\n                \n                let messageDiv = document.createElement( 'div' );\n                messageDiv.classList.add( validationMsgClass );\n                messageDiv.appendChild( document.createTextNode( message ) );\n\n                element.classList.add( inputErrorClass );\n                if( errorOutputId === null ) {\n                    \n                    if( aroundInput === 'before' ) { \n                        parent.insertBefore( messageDiv, element.previousSibling );\n                    } else { \n                        parent.insertBefore( messageDiv, element.nextSibling );\n                    }\n                                        \n                } else {\n                    errorMsgContainer.appendChild( messageDiv );\n                }\n\n            }\n\n        }\n\n        function formatElementName( name ) { \n            let newName = name.replace( '-', ' ' ).replace( '_', ' ' );\n            return newName.replace(/(^\\w{1})|(\\s+\\w{1})/g, letter => letter.toUpperCase());\n        }\n\n    }\n\n    /**\n     * Remove validation messages from form \n     * \n     * @param {HTMLelement} form \n     */\n\n    function removeMessage( form ) {\n\n        let validationMessages = document.querySelectorAll( '.' + validationMsgClass );\n        for( let i = 0; i < validationMessages.length; i++ ) {\n            validationMessages[ i ].remove();\n        }\n\n        let inputErrors = form.querySelectorAll( '.' + inputErrorClass );\n        for( let i = 0; i < inputErrors.length; i++ ) {\n            inputErrors[ i ].classList.remove( inputErrorClass );\n        }\n\n    }\n\n    function registerCallback( callbackName, func  ) {\n\n        callbacks[ callbackName ] = func;\n\n    }\n\n    return {\n        registerForm : init, \n        removeMessage : removeMessage, \n        postMessage : postMessage, \n        registerCallback: registerCallback\n    }\n\n})( window, document );\n\nexport const initFormValidation = function() {\n\n    let formsOnPage = document.querySelectorAll( 'form' );\n\n    for( let i = 0; i < formsOnPage.length; i++  ) {\n        if( formsOnPage[ i ].hasAttribute( 'novalidate' ) ) { continue; }\n        FormValidation.registerForm( formsOnPage[ i ] );\n    }\n\n}","export function initBackgroundToggle() {\r\n    const contrastButton = document.getElementById( 'contrast' ); \r\n    const sectionElements = document.querySelectorAll( 'section' );\r\n\r\n    let state = {\r\n        \"active\" : 0\r\n    }; \r\n\r\n    let bgProps = [ \r\n        \"none\", \r\n        \"bg--primary-base\",       \r\n        \"bg--primary-light-1\",    \r\n        \"bg--primary-light-2\",    \r\n        \"bg--primary-light-3\",    \r\n        \"bg--primary-dark-1\",     \r\n        \"bg--primary-dark-2\",     \r\n        \"bg--secondary-base\",     \r\n        \"bg--secondary-light-1\",  \r\n        \"bg--secondary-light-2\",  \r\n        \"bg--secondary-light-3\",  \r\n        \"bg--secondary-dark-1\",   \r\n        \"bg--secondary-dark-2\",   \r\n        \"bg--tertiary-base\",      \r\n        \"bg--tertiary-light-1\",   \r\n        \"bg--tertiary-light-2\",     \r\n        \"bg--tertiary-dark-1\",    \r\n        \"bg--tertiary-dark-2\",    \r\n        \"bg--error-background\",   \r\n        \"bg--success-background\", \r\n        \"bg--warning-background\", \r\n        \"bg--info-background\"    \r\n    ]; \r\n\r\n    for( let i = 0; i < sectionElements.length; i++ ) {\r\n        sectionElements[ i ].classList.add( bgProps[ state.active ] );\r\n    }\r\n\r\n    contrastButton.addEventListener( 'click', ( e ) => {  \r\n        let prevActive = state.active; \r\n        state.active = ( state.active < (bgProps.length - 1) ) ? state.active + 1 : 0;\r\n       \r\n        for( let i = 0; i < sectionElements.length; i++ ) {\r\n            if( sectionElements[ i ].classList.length !== 0 ) { \r\n                sectionElements[ i ].classList.replace( bgProps[ prevActive ], bgProps[ state.active ] );\r\n            } else {\r\n                sectionElements[ i ].classList.add( bgProps[ state.active ] );\r\n            }\r\n        }\r\n    });\r\n};","import { initBackgroundToggle } from '../../assets/demo-scripts/backgroundToggle';\r\nimport { FormValidation, initFormValidation } from 'html5-form-validation-js/html5-form-validation.js';\r\n\r\ninitBackgroundToggle();  \r\n\r\n// Initialize Plugin\r\ninitFormValidation();\r\n\r\n// Form Submission Handler\r\nFormValidation.registerCallback( 'handleFormValidation', formSubmitEvent => alert( 'Form ID - ' + formSubmitEvent.target.id + ' is valid!' ) );  \r\n\r\n//  Form Reset Button  \r\nconst formResetButton = document.querySelector( '#demo-form [type=reset]' ); \r\n\r\nformResetButton.addEventListener( 'click', function(e) {\r\n\r\n    const form = e.target.form; \r\n\r\n    const inputErrors = form.querySelectorAll( '.input-error' ); \r\n    const validationMessages = form.querySelectorAll( '.validation-message' );\r\n\r\n    inputErrors.forEach( formInput => {\r\n        formInput.classList.remove( 'input-error' ); \r\n    });\r\n \r\n    validationMessages.forEach( messageNode => {\r\n        messageNode.parentElement.removeChild( messageNode );\r\n    });\r\n\r\n}); \r\n\r\n// Input Reset Button \r\nconst inputResetButtons = document.querySelectorAll( '#demo-form .has-reset-button > button' ) \r\n\r\ninputResetButtons.forEach( button => {\r\n\r\n    button.addEventListener( 'click', e => {\r\n\r\n        e.preventDefault();\r\n\r\n        const inputWrapper = e.target.parentElement.parentElement; // Icon ends up being the target\r\n        const input = inputWrapper.querySelector( 'input' ); \r\n        \r\n        input.classList.remove( 'input-error' ); \r\n        input.value = ''; \r\n         \r\n        if( inputWrapper.querySelector( '.validation-message' ) !== null ) {\r\n            inputWrapper.removeChild( \r\n                inputWrapper.querySelector( '.validation-message' ) \r\n            );\r\n        }\r\n\r\n    });\r\n\r\n}); \r\n \r\n// Nested Checklist\r\nconst checklistLabel = document.querySelectorAll( '.nested-checklist' ); \r\n\r\nchecklistLabel.forEach( checklist => {\r\n \r\n    const id = checklist.getAttribute( 'for' ); \r\n    const subOptions = document.querySelectorAll( `[for=${id}] + ul > li input` );\r\n    const parentOptionInput = document.querySelector( `[for=${id}] input` );\r\n\r\n    checklist.addEventListener( 'click', e => {\r\n         \r\n        if( e.target.checked ) { \r\n            subOptions.forEach( option => {\r\n                option.checked = true; \r\n            });\r\n        } else { \r\n            subOptions.forEach( option => {\r\n                option.checked = false; \r\n            });\r\n        }\r\n\r\n    }); \r\n\r\n    subOptions.forEach( option => {\r\n\r\n        option.addEventListener( 'click', e => { \r\n\r\n            const subOptionsCount = subOptions.length; \r\n            let checkedOptionsCount = checkAllOptions( subOptions ); \r\n \r\n            switch( true ) { \r\n\r\n                case checkedOptionsCount === 0: \r\n                    checklist.classList.remove( 'partial' );\r\n                    parentOptionInput.checked = false;\r\n                    break; \r\n\r\n                case checkedOptionsCount === subOptionsCount: \r\n                    checklist.classList.remove( 'partial' ); \r\n                    parentOptionInput.checked = true;\r\n                    break; \r\n                default: \r\n                    checklist.classList.add( 'partial' ); \r\n                    parentOptionInput.checked = true;\r\n                    break; \r\n\r\n            }\r\n\r\n        });\r\n\r\n    })\r\n \r\n    function checkAllOptions( subOptions ) {  \r\n\r\n        let count = 0; \r\n\r\n        for( let i = 0; i < subOptions.length; i++ ) {\r\n            if( subOptions[i].checked ) {\r\n                count++;\r\n            }\r\n        };  \r\n\r\n        return count; \r\n         \r\n    } \r\n\r\n}); \r\n\r\n// Form Check Validity \r\n\r\nconst form = document.querySelector( '#demo-form' );  \r\n\r\nform.addEventListener( 'change', e => {\r\n \r\n    const input = e.target; \r\n    const validationMsgClass = 'validation-message';\r\n    const inputErrorClass = 'input-error';\r\n    const errorOutputId = form.getAttribute( 'data-error-output-id' ); \r\n    const aroundInput = form.getAttribute( 'data-near-input' );\r\n    const errorMsgContainer = document.getElementById( errorOutputId );\r\n\r\n    if( \r\n        !form.checkValidity() &&\r\n        ( input.willValidate === true && input.validity.valid !== true )\r\n    ) {\r\n\r\n        let message = input.validationMessage;\r\n        let parent  = input.parentNode; \r\n\r\n        if( input.dataset.errorMessage !== undefined ) { \r\n            message = input.dataset.errorMessage; \r\n        } \r\n\r\n        if( errorOutputId !== null ) {\r\n            message = formatElementName( input.name ) + \" - \" + message;\r\n        }\r\n            \r\n        if ( input.willValidate === true && input.validity.valid !== true ) {\r\n            \r\n            let messageDiv = document.createElement( 'div' );\r\n            messageDiv.classList.add( validationMsgClass );\r\n            messageDiv.appendChild( document.createTextNode( message ) );\r\n\r\n            input.classList.add( inputErrorClass );\r\n            if( errorOutputId === null ) {\r\n                \r\n                if( aroundInput === 'before' ) { \r\n                    parent.insertBefore( messageDiv, input.previousSibling );\r\n                } else { \r\n                    parent.insertBefore( messageDiv, input.nextSibling );\r\n                }\r\n                                    \r\n            } else {\r\n                errorMsgContainer.appendChild( messageDiv );\r\n            }\r\n\r\n        }\r\n    \r\n    } else {\r\n        input.classList.remove( 'input-error' ); \r\n\r\n        if( input.parentElement.querySelector( '.validation-message' ) !== null ) { \r\n            input.parentElement.removeChild( \r\n                input.parentElement.querySelector( '.validation-message' ) \r\n            );\r\n        }\r\n    }\r\n\r\n});"],"names":["FormValidation","window","document","callbacks","validationMsgClass","inputErrorClass","postMessage","form","elements","errorOutputId","getAttribute","aroundInput","errorMsgContainer","getElementById","index","len","length","element","message","validationMessage","parent","parentNode","undefined","dataset","errorMessage","name","replace","letter","toUpperCase","willValidate","validity","valid","messageDiv","createElement","classList","add","appendChild","createTextNode","insertBefore","previousSibling","nextSibling","removeMessage","validationMessages","querySelectorAll","i","remove","inputErrors","registerForm","formElement","formId","id","validFormCallback","noValidate","addEventListener","submitEvent","preventDefault","stopImmediatePropagation","stopPropagation","callbackName","target","honeypot","querySelector","value","checkValidity","console","warn","validateForm","registerCallback","func","contrastButton","sectionElements","state","bgProps","active","e","prevActive","initBackgroundToggle","formsOnPage","hasAttribute","initFormValidation","formSubmitEvent","alert","forEach","formInput","messageNode","parentElement","removeChild","button","inputWrapper","input","checklist","subOptions","parentOptionInput","checked","option","subOptionsCount","checkedOptionsCount","count","checkAllOptions","formatElementName"],"sourceRoot":""}