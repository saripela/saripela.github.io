(()=>{"use strict";let t=function(){let e={};return{launch:function(e){var a,l={},o=function(t){t.setAttribute("data-modal-container","hidden"),l.updateState({visible:!1})};return l.toggle=function(t){var e;void 0!==t&&(a.fieldToUpdate=null==t.target.getAttribute("data-target-update-field")?null:t.target.getAttribute("data-target-update-field")),"hidden"==a.container.getAttribute("data-modal-container")?(e=a.target,null!=a.targetGroup&&hideSiblings(a.targetGroup),e.setAttribute("data-modal-container","visible"),l.updateState({visible:!0}),document.querySelector("body").setAttribute("data-modal","active"),document.querySelector("body").setAttribute("data-overlay","active")):o(a.target)},l.getFieldToUpdate=function(){return null==a.fieldToUpdate?null:a.fieldToUpdate},l.init=e=>{if("true"===(a=e).override)try{a.callback=t=>{window[a.customCallback](t)}}catch(t){console.error("Modal Plugin, custom callback for Modal ID: "+a.id+"  failed. Message: "+t.message)}else a.callback=e=>t.getModal(a.id).toggle(e);for(let t=0;t<a.triggers.length;t++){a.triggers[t].setAttribute("data-trigger-id",t);let e=a.triggers[t].getAttribute("data-modal-trigger");e=void 0!==e&&""!==e?e:"click",a.triggers[t].addEventListener(e,a.callback)}a.target.addEventListener("transitionend",(function(t){document.querySelectorAll('[data-modal-container="visible"]').length<1&&(document.querySelector("body").setAttribute("data-modal","inactive"),document.querySelector("body").setAttribute("data-overlay","inactive"))})),a.visible||o(a.target)},l.updateState=function(t){for(let e in t)a[e]=t[e]},l.getSettings=function(){return a},l.isVisible=function(){return a.visible},l.init(e),l},registerModal:function(e){let a,l=e,o=l.getAttribute("data-modal-target"),i="[data-modal-target="+o+"][data-modal-trigger]",n=document.querySelectorAll(i),r="hidden"!=e.getAttribute("data-modal-container"),d=null,c=e.getAttribute("data-modal-override");void 0!==c&&"false"!==c&&(a=e.getAttribute("data-modal-callback"),d=null==a?null:a,null==d&&console.warn("Modals Plugin did not detect custom callback for override, Node:",e)),null==l&&console.warn("Modal Plugin, did not detect target, Node:",e),0==n.length&&console.warn("Modal Plugin, did not detect trigger, Node:",e),this.storeModal(o,new t.launch({id:o,container:l,triggerSelector:i,triggers:n,target:l,override:c,customCallback:d,visible:r}))},storeModal:function(t,a){e[t]=a},getModal:function(t){return e[t]},getModals:function(){return e},addCloseModalEvents:function(){const e=document.querySelector(".modal-containers");window.addEventListener("click",(function(a){const l=a.target.getAttribute("data-close-modal");if(a.target==e){let e=document.querySelectorAll("[data-modal-container]");for(let a=0;a<e.length;a++){const l=t.getModal(e[a].getAttribute("data-modal-target"));l.isVisible()&&l.toggle()}}null!==l&&t.getModal(l).toggle()}))},closeModal:function(t){this.getModal(t).toggle()}}}();!function(e=".modal-containers"){let a=document.querySelector(e).querySelectorAll("[data-modal-container]");if(0!==a.length){for(let e=0;e<a.length;e++)t.registerModal(a[e],e);t.addCloseModalEvents()}else console.warn("Modal plugin not initialized; div.modal-container not defined")}()})();
//# sourceMappingURL=demos\modals\index.html.js.map